/**
 * @fileoverview gRPC-Web generated client stub for runy
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: runy.proto

/* eslint-disable */
// @ts-nocheck

const grpc = {};
grpc.web = require("grpc-web");

var google_protobuf_struct_pb = require("google-protobuf/google/protobuf/struct_pb.js");

var google_protobuf_timestamp_pb = require("google-protobuf/google/protobuf/timestamp_pb.js");
const proto = {};
proto.runy = require("./runy_pb.js");

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.runy.RunyClient = function (hostname, credentials, options) {
  if (!options) options = {};
  options.format = "text";

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, "");
};

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.runy.RunyPromiseClient = function (hostname, credentials, options) {
  if (!options) options = {};
  options.format = "text";

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, "");
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.runy.TerminateRequest,
 *   !proto.runy.TerminateResponse>}
 */
const methodDescriptor_Runy_Terminate = new grpc.web.MethodDescriptor(
  "/runy.Runy/Terminate",
  grpc.web.MethodType.UNARY,
  proto.runy.TerminateRequest,
  proto.runy.TerminateResponse,
  /**
   * @param {!proto.runy.TerminateRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.runy.TerminateResponse.deserializeBinary
);

/**
 * @param {!proto.runy.TerminateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.runy.TerminateResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.runy.TerminateResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.runy.RunyClient.prototype.terminate = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/runy.Runy/Terminate",
    request,
    metadata || {},
    methodDescriptor_Runy_Terminate,
    callback
  );
};

/**
 * @param {!proto.runy.TerminateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.runy.TerminateResponse>}
 *     Promise that resolves to the response
 */
proto.runy.RunyPromiseClient.prototype.terminate = function (
  request,
  metadata
) {
  return this.client_.unaryCall(
    this.hostname_ + "/runy.Runy/Terminate",
    request,
    metadata || {},
    methodDescriptor_Runy_Terminate
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.runy.VersionRequest,
 *   !proto.runy.VersionResponse>}
 */
const methodDescriptor_Runy_Version = new grpc.web.MethodDescriptor(
  "/runy.Runy/Version",
  grpc.web.MethodType.UNARY,
  proto.runy.VersionRequest,
  proto.runy.VersionResponse,
  /**
   * @param {!proto.runy.VersionRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.runy.VersionResponse.deserializeBinary
);

/**
 * @param {!proto.runy.VersionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.runy.VersionResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.runy.VersionResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.runy.RunyClient.prototype.version = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/runy.Runy/Version",
    request,
    metadata || {},
    methodDescriptor_Runy_Version,
    callback
  );
};

/**
 * @param {!proto.runy.VersionRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.runy.VersionResponse>}
 *     Promise that resolves to the response
 */
proto.runy.RunyPromiseClient.prototype.version = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + "/runy.Runy/Version",
    request,
    metadata || {},
    methodDescriptor_Runy_Version
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.runy.ExecRequest,
 *   !proto.runy.CommandRecord>}
 */
const methodDescriptor_Runy_Command = new grpc.web.MethodDescriptor(
  "/runy.Runy/Command",
  grpc.web.MethodType.SERVER_STREAMING,
  proto.runy.ExecRequest,
  proto.runy.CommandRecord,
  /**
   * @param {!proto.runy.ExecRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.runy.CommandRecord.deserializeBinary
);

/**
 * @param {!proto.runy.ExecRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.runy.CommandRecord>}
 *     The XHR Node Readable Stream
 */
proto.runy.RunyClient.prototype.command = function (request, metadata) {
  return this.client_.serverStreaming(
    this.hostname_ + "/runy.Runy/Command",
    request,
    metadata || {},
    methodDescriptor_Runy_Command
  );
};

/**
 * @param {!proto.runy.ExecRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.runy.CommandRecord>}
 *     The XHR Node Readable Stream
 */
proto.runy.RunyPromiseClient.prototype.command = function (request, metadata) {
  return this.client_.serverStreaming(
    this.hostname_ + "/runy.Runy/Command",
    request,
    metadata || {},
    methodDescriptor_Runy_Command
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.runy.ClearJournalRequest,
 *   !proto.runy.ClearJournalResponse>}
 */
const methodDescriptor_Runy_ClearJournal = new grpc.web.MethodDescriptor(
  "/runy.Runy/ClearJournal",
  grpc.web.MethodType.UNARY,
  proto.runy.ClearJournalRequest,
  proto.runy.ClearJournalResponse,
  /**
   * @param {!proto.runy.ClearJournalRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.runy.ClearJournalResponse.deserializeBinary
);

/**
 * @param {!proto.runy.ClearJournalRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.runy.ClearJournalResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.runy.ClearJournalResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.runy.RunyClient.prototype.clearJournal = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/runy.Runy/ClearJournal",
    request,
    metadata || {},
    methodDescriptor_Runy_ClearJournal,
    callback
  );
};

/**
 * @param {!proto.runy.ClearJournalRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.runy.ClearJournalResponse>}
 *     Promise that resolves to the response
 */
proto.runy.RunyPromiseClient.prototype.clearJournal = function (
  request,
  metadata
) {
  return this.client_.unaryCall(
    this.hostname_ + "/runy.Runy/ClearJournal",
    request,
    metadata || {},
    methodDescriptor_Runy_ClearJournal
  );
};

module.exports = proto.runy;
