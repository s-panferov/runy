/**
 * @fileoverview gRPC-Web generated client stub for runy
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: runy.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as runy_pb from './runy_pb'; // proto import: "runy.proto"


export class RunyClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorTerminate = new grpcWeb.MethodDescriptor(
    '/runy.Runy/Terminate',
    grpcWeb.MethodType.UNARY,
    runy_pb.TerminateRequest,
    runy_pb.TerminateResponse,
    (request: runy_pb.TerminateRequest) => {
      return request.serializeBinary();
    },
    runy_pb.TerminateResponse.deserializeBinary
  );

  terminate(
    request: runy_pb.TerminateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<runy_pb.TerminateResponse>;

  terminate(
    request: runy_pb.TerminateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: runy_pb.TerminateResponse) => void): grpcWeb.ClientReadableStream<runy_pb.TerminateResponse>;

  terminate(
    request: runy_pb.TerminateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: runy_pb.TerminateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/runy.Runy/Terminate',
        request,
        metadata || {},
        this.methodDescriptorTerminate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/runy.Runy/Terminate',
    request,
    metadata || {},
    this.methodDescriptorTerminate);
  }

  methodDescriptorVersion = new grpcWeb.MethodDescriptor(
    '/runy.Runy/Version',
    grpcWeb.MethodType.UNARY,
    runy_pb.VersionRequest,
    runy_pb.VersionResponse,
    (request: runy_pb.VersionRequest) => {
      return request.serializeBinary();
    },
    runy_pb.VersionResponse.deserializeBinary
  );

  version(
    request: runy_pb.VersionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<runy_pb.VersionResponse>;

  version(
    request: runy_pb.VersionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: runy_pb.VersionResponse) => void): grpcWeb.ClientReadableStream<runy_pb.VersionResponse>;

  version(
    request: runy_pb.VersionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: runy_pb.VersionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/runy.Runy/Version',
        request,
        metadata || {},
        this.methodDescriptorVersion,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/runy.Runy/Version',
    request,
    metadata || {},
    this.methodDescriptorVersion);
  }

  methodDescriptorCommand = new grpcWeb.MethodDescriptor(
    '/runy.Runy/Command',
    grpcWeb.MethodType.SERVER_STREAMING,
    runy_pb.ExecRequest,
    runy_pb.CommandRecord,
    (request: runy_pb.ExecRequest) => {
      return request.serializeBinary();
    },
    runy_pb.CommandRecord.deserializeBinary
  );

  command(
    request: runy_pb.ExecRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<runy_pb.CommandRecord> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/runy.Runy/Command',
      request,
      metadata || {},
      this.methodDescriptorCommand);
  }

  methodDescriptorClearJournal = new grpcWeb.MethodDescriptor(
    '/runy.Runy/ClearJournal',
    grpcWeb.MethodType.UNARY,
    runy_pb.ClearJournalRequest,
    runy_pb.ClearJournalResponse,
    (request: runy_pb.ClearJournalRequest) => {
      return request.serializeBinary();
    },
    runy_pb.ClearJournalResponse.deserializeBinary
  );

  clearJournal(
    request: runy_pb.ClearJournalRequest,
    metadata?: grpcWeb.Metadata | null): Promise<runy_pb.ClearJournalResponse>;

  clearJournal(
    request: runy_pb.ClearJournalRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: runy_pb.ClearJournalResponse) => void): grpcWeb.ClientReadableStream<runy_pb.ClearJournalResponse>;

  clearJournal(
    request: runy_pb.ClearJournalRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: runy_pb.ClearJournalResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/runy.Runy/ClearJournal',
        request,
        metadata || {},
        this.methodDescriptorClearJournal,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/runy.Runy/ClearJournal',
    request,
    metadata || {},
    this.methodDescriptorClearJournal);
  }

  methodDescriptorTree = new grpcWeb.MethodDescriptor(
    '/runy.Runy/Tree',
    grpcWeb.MethodType.SERVER_STREAMING,
    runy_pb.TreeRequest,
    runy_pb.TreeResponse,
    (request: runy_pb.TreeRequest) => {
      return request.serializeBinary();
    },
    runy_pb.TreeResponse.deserializeBinary
  );

  tree(
    request: runy_pb.TreeRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<runy_pb.TreeResponse> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/runy.Runy/Tree',
      request,
      metadata || {},
      this.methodDescriptorTree);
  }

  methodDescriptorJournal = new grpcWeb.MethodDescriptor(
    '/runy.Runy/Journal',
    grpcWeb.MethodType.SERVER_STREAMING,
    runy_pb.JournalRequest,
    runy_pb.JournalRecord,
    (request: runy_pb.JournalRequest) => {
      return request.serializeBinary();
    },
    runy_pb.JournalRecord.deserializeBinary
  );

  journal(
    request: runy_pb.JournalRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<runy_pb.JournalRecord> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/runy.Runy/Journal',
      request,
      metadata || {},
      this.methodDescriptorJournal);
  }

  methodDescriptorJournalEntries = new grpcWeb.MethodDescriptor(
    '/runy.Runy/JournalEntries',
    grpcWeb.MethodType.UNARY,
    runy_pb.JournalEntriesRequest,
    runy_pb.JournalEntriesResponse,
    (request: runy_pb.JournalEntriesRequest) => {
      return request.serializeBinary();
    },
    runy_pb.JournalEntriesResponse.deserializeBinary
  );

  journalEntries(
    request: runy_pb.JournalEntriesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<runy_pb.JournalEntriesResponse>;

  journalEntries(
    request: runy_pb.JournalEntriesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: runy_pb.JournalEntriesResponse) => void): grpcWeb.ClientReadableStream<runy_pb.JournalEntriesResponse>;

  journalEntries(
    request: runy_pb.JournalEntriesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: runy_pb.JournalEntriesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/runy.Runy/JournalEntries',
        request,
        metadata || {},
        this.methodDescriptorJournalEntries,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/runy.Runy/JournalEntries',
    request,
    metadata || {},
    this.methodDescriptorJournalEntries);
  }

  methodDescriptorWorkspaceCreate = new grpcWeb.MethodDescriptor(
    '/runy.Runy/WorkspaceCreate',
    grpcWeb.MethodType.UNARY,
    runy_pb.WorkspaceCreateRequest,
    runy_pb.WorkspaceCreateResponse,
    (request: runy_pb.WorkspaceCreateRequest) => {
      return request.serializeBinary();
    },
    runy_pb.WorkspaceCreateResponse.deserializeBinary
  );

  workspaceCreate(
    request: runy_pb.WorkspaceCreateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<runy_pb.WorkspaceCreateResponse>;

  workspaceCreate(
    request: runy_pb.WorkspaceCreateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: runy_pb.WorkspaceCreateResponse) => void): grpcWeb.ClientReadableStream<runy_pb.WorkspaceCreateResponse>;

  workspaceCreate(
    request: runy_pb.WorkspaceCreateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: runy_pb.WorkspaceCreateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/runy.Runy/WorkspaceCreate',
        request,
        metadata || {},
        this.methodDescriptorWorkspaceCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/runy.Runy/WorkspaceCreate',
    request,
    metadata || {},
    this.methodDescriptorWorkspaceCreate);
  }

  methodDescriptorWorkspaceRemove = new grpcWeb.MethodDescriptor(
    '/runy.Runy/WorkspaceRemove',
    grpcWeb.MethodType.UNARY,
    runy_pb.WorkspaceRemoveRequest,
    runy_pb.WorkspaceRemoveResponse,
    (request: runy_pb.WorkspaceRemoveRequest) => {
      return request.serializeBinary();
    },
    runy_pb.WorkspaceRemoveResponse.deserializeBinary
  );

  workspaceRemove(
    request: runy_pb.WorkspaceRemoveRequest,
    metadata?: grpcWeb.Metadata | null): Promise<runy_pb.WorkspaceRemoveResponse>;

  workspaceRemove(
    request: runy_pb.WorkspaceRemoveRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: runy_pb.WorkspaceRemoveResponse) => void): grpcWeb.ClientReadableStream<runy_pb.WorkspaceRemoveResponse>;

  workspaceRemove(
    request: runy_pb.WorkspaceRemoveRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: runy_pb.WorkspaceRemoveResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/runy.Runy/WorkspaceRemove',
        request,
        metadata || {},
        this.methodDescriptorWorkspaceRemove,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/runy.Runy/WorkspaceRemove',
    request,
    metadata || {},
    this.methodDescriptorWorkspaceRemove);
  }

}

